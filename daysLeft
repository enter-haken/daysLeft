#!/usr/bin/env python
import argparse
import sys
import stat
import os

import datetime

def parseDate(date):
    return datetime.datetime.strptime(date,"%Y-%m-%d")

if __name__ == '__main__':
    PARSER = argparse.ArgumentParser(
            formatter_class=argparse.ArgumentDefaultsHelpFormatter,
            description='''
                gets days left in relation to a given date
            '''
            )

    PARSER.add_argument('-d', '--date', required=True, help='target date, format YYYY-mm-dd')
    PARSER.add_argument('-w', '--excludeWeekends', action="store_true", help='exclude weekends')
    PARSER.add_argument('-e', '--excludeDays', nargs="+" , help='exclude specific days, format YYYY-mm-dd')
    PARSER.add_argument('-s', '--subtractDays', type=int, help='substract days, not yet planed (e.g. holydays)')
    PARSER.add_argument('-v', '--verbose', action="store_true", help='show dates')
    
    args = PARSER.parse_args()
   
    targetDate = parseDate(args.date)

    difference = targetDate - datetime.datetime.today()

    leftDays = [targetDate - datetime.timedelta(days=x) for x in range(0, difference.days + 1) ]

    weekend = [5,6]

    if args.excludeWeekends:
        leftDays = [x for x in leftDays if x.weekday() not in weekend ]

    if args.excludeDays:
        parsedDays = [parseDate(x) for x in args.excludeDays ]
        leftDays = [x for x in leftDays if x not in parsedDays ]

    if args.verbose:
        print( [ str(x) for x in leftDays])

    if (args.subtractDays):
        print(len(leftDays) - args.subtractDays)
    else:
        print(len(leftDays))
